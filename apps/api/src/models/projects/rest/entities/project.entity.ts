import { ApiProperty } from '@nestjs/swagger'
import { Project as ProjectType } from '@prisma/client'
import { IsInt, IsOptional, IsString, IsUrl, IsUUID } from 'class-validator'

export class Project implements ProjectType {
  @ApiProperty({
    example: '4e8b9963-f72d-4887-9678-48c3ff26d60e',
  })
  @IsUUID()
  uid: string

  @ApiProperty({
    example: 'Perfumest',
  })
  @IsString()
  name: string

  @ApiProperty({
    example: 1,
    description: 'Order (for featured)',
    required: false,
    nullable: true,
  })
  @IsInt()
  @IsOptional()
  order: number

  @ApiProperty({
    example: 'Your Destination for Exquisite Scents',
    description: 'Short description (for featured)',
    required: false,
    nullable: true,
  })
  @IsString()
  @IsOptional()
  description: string

  @ApiProperty({
    example: 'https://i.imgur.com/fTWBurX.png',
    description: 'Mobile Preview Image(for featured)',
    format: 'link',
    required: false,
    nullable: true,
  })
  @IsUrl()
  @IsOptional()
  img_mobile: string

  @ApiProperty({
    example: 'https://i.imgur.com/zJFEJAP.png',
    description: 'Desktop Preview Image(for featured)',
    format: 'link',
    required: false,
    nullable: true,
  })
  @IsUrl()
  @IsOptional()
  img_desktop: string

  @ApiProperty({
    example: 'https://i.imgur.com/DIsc7q1.png',
    description: 'Laptop Preview Image(for featured)',
    format: 'link',
    required: false,
    nullable: true,
  })
  @IsUrl()
  @IsOptional()
  img_laptop: string

  @ApiProperty({
    example: 'https://github.com/EcchiGrill/Perfumest',
    description: 'Github link',
    required: false,
    nullable: true,
  })
  @IsUrl()
  @IsOptional()
  git_link: string

  @ApiProperty({
    example: 'https://www.perfumest.one/',
    description: 'Website link',
  })
  @IsUrl()
  link: string

  @ApiProperty({
    example: '2024-12-16T19:13:25.284Z',
    description: 'Creation Date(autogenerated)',
    format: 'ISODate',
  })
  createdAt: Date

  @ApiProperty({
    example: '2024-12-16T19:12:51.551Z',
    description: 'Update Date(autogenerated)',
    format: 'ISODate',
  })
  updatedAt: Date
}
